; This testcase verifies that we can produce a PDB with line
; information.  It does this by describing some line information
; manually in YAML, creating a PDB out of it, then dumping then
; line information from the resulting PDB.

; RUN: llvm-pdbdump yaml2pdb -pdb=%t.pdb %p/Inputs/simple-line-info.yaml
; RUN: llvm-pdbdump raw -line-info %t.pdb | FileCheck -check-prefix=LINES %s

LINES:       Modules [
LINES-NEXT:    {
LINES-NEXT:      Name: d:\src\llvm\test\DebugInfo\PDB\Inputs\empty.obj
LINES:           LineInfo [
LINES-NEXT:        FileChecksums {
LINES-NEXT:          Checksum {
LINES-NEXT:            FileName: d:\src\llvm\test\debuginfo\pdb\inputs\empty.cpp
LINES-NEXT:            Kind: MD5 (0x1)
LINES-NEXT:            Checksum (
LINES-NEXT:              0000: A0A5BD0D 3ECD93FC 29D19DE8 26FBF4BC  |....>...)...&...|
LINES-NEXT:            )
LINES-NEXT:          }
LINES-NEXT:        }
LINES-NEXT:        Lines {
LINES-NEXT:          Block {
LINES-NEXT:            RelocSegment: 1
LINES-NEXT:            RelocOffset: 16
LINES-NEXT:            CodeSize: 10
LINES-NEXT:            HasColumns: No
LINES-NEXT:            Lines {
LINES-NEXT:              FileName: d:\src\llvm\test\debuginfo\pdb\inputs\empty.cpp
LINES-NEXT:              Line {
LINES-NEXT:                Offset: 0
LINES-NEXT:                LineNumberStart: 5
LINES-NEXT:                EndDelta: 0
LINES-NEXT:                IsStatement: Yes
LINES-NEXT:              }
LINES-NEXT:              Line {
LINES-NEXT:                Offset: 3
LINES-NEXT:                LineNumberStart: 6
LINES-NEXT:                EndDelta: 0
LINES-NEXT:                IsStatement: Yes
LINES-NEXT:              }
LINES-NEXT:              Line {
LINES-NEXT:                Offset: 8
LINES-NEXT:                LineNumberStart: 7
LINES-NEXT:                EndDelta: 0
LINES-NEXT:                IsStatement: Yes
LINES-NEXT:              }
LINES-NEXT:            }
LINES-NEXT:          }
LINES-NEXT:        }
LINES-NEXT:      ]
LINES-NEXT:    }
