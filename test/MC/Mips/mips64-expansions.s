# RUN: llvm-mc %s -triple=mips64el-unknown-linux -show-encoding -mcpu=mips64r2 | FileCheck %s
#
# The GNU assembler implements 'dli' and 'dla' variants on 'li' and 'la'
# supporting double-word lengths.  Test that not only are they present, bu
# that they also seem to handle 64-bit values.
#
# XXXRW: Does using powers of ten make me a bad person?
#
# CHECK: lui	$8,0x0		# encoding: [0x3c,0x0c,0x00,0x00]
# CHECK: lui	$1,0x0		# encoding: [0x3c,0x01,0x00,0x00]
# CHECK: daddiu	$8,$8,0		# encoding: [0x65,0x8c,0x00,0x00]
# CHECK: daddiu	$1,$1,0		# encoding: [0x64,0x21,0x00,0x00]
# CHECK: dsll32	$8,$8,0x0	# encoding: [0x00,0x0c,0x60,0x3c]
# CHECK: daddu	$8,$8,$1	# encoding: [0x01,0x81,0x60,0x2d]
# CHECK: li	$8,1		# encoding: [0x24,0x0c,0x00,0x01]
# CHECK: li	$8,10		# encoding: [0x24,0x0c,0x00,0x0a]
# CHECK: li	$8,100		# encoding: [0x24,0x0c,0x00,0x64]
# CHECK: li	$8,1000		# encoding: [0x24,0x0c,0x03,0xe8]
# CHECK: li	$8,10000	# encoding: [0x24,0x0c,0x27,0x10]
# CHECK: lui	$8,0x1		# encoding: [0x3c,0x0c,0x00,0x01]
# CHECK: ori	$8,$8,0x86a0	# encoding: [0x35,0x8c,0x86,0xa0]
# CHECK: lui	$8,0xf		# encoding: [0x3c,0x0c,0x00,0x0f]
# CHECK: ori	$8,$8,0x4240	# encoding: [0x35,0x8c,0x42,0x40]
# CHECK: lui	$8,0x98		# encoding: [0x3c,0x0c,0x00,0x98]
# CHECK: ori	$8,$8,0x9680	# encoding: [0x35,0x8c,0x96,0x80]
# CHECK: lui	$8,0x5f5	# encoding: [0x3c,0x0c,0x05,0xf5]
# CHECK: ori	$8,$8,0xe100	# encoding: [0x35,0x8c,0xe1,0x00]
# CHECK: lui	$8,0x3b9a	# encoding: [0x3c,0x0c,0x3b,0x9a]
# CHECK: ori	$8,$8,0xca00	# encoding: [0x35,0x8c,0xca,0x00]
# CHECK: li	$8,2		# encoding: [0x24,0x0c,0x00,0x02]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x540b	# encoding: [0x35,0x8c,0x54,0x0b]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xe400	# encoding: [0x35,0x8c,0xe4,0x00]
# CHECK: li	$8,23		# encoding: [0x24,0x0c,0x00,0x17]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x4876	# encoding: [0x35,0x8c,0x48,0x76]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xe800	# encoding: [0x35,0x8c,0xe8,0x00]
# CHECK: li	$8,232		# encoding: [0x24,0x0c,0x00,0xe8]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xd4a5	# encoding: [0x35,0x8c,0xd4,0xa5]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x1000	# encoding: [0x35,0x8c,0x10,0x00]
# CHECK: li	$8,2328		# encoding: [0x24,0x0c,0x09,0x18]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x4e72	# encoding: [0x35,0x8c,0x4e,0x72]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xa000	# encoding: [0x35,0x8c,0xa0,0x00]
# CHECK: li	$8,23283	# encoding: [0x24,0x0c,0x5a,0xf3]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x107a	# encoding: [0x35,0x8c,0x10,0x7a]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x4000	# encoding: [0x35,0x8c,0x40,0x00]
# CHECK: lui	$8,0x3		# encoding: [0x3c,0x0c,0x00,0x03]
# CHECK: ori	$8,$8,0x8d7e	# encoding: [0x35,0x8c,0x8d,0x7e]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xa4c6	# encoding: [0x35,0x8c,0xa4,0xc6]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x8000	# encoding: [0x35,0x8c,0x80,0x00]
# CHECK: lui	$8,0x23		# encoding: [0x3c,0x0c,0x00,0x23]
# CHECK: ori	$8,$8,0x86f2	# encoding: [0x35,0x8c,0x86,0xf2]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x6fc1	# encoding: [0x35,0x8c,0x6f,0xc1]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0x163	# encoding: [0x3c,0x0c,0x01,0x63]
# CHECK: ori	$8,$8,0x4578	# encoding: [0x35,0x8c,0x45,0x78]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x5d8a	# encoding: [0x35,0x8c,0x5d,0x8a]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0xde0	# encoding: [0x3c,0x0c,0x0d,0xe0]
# CHECK: ori	$8,$8,0xb6b3	# encoding: [0x35,0x8c,0xb6,0xb3]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xa764	# encoding: [0x35,0x8c,0xa7,0x64]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0x8ac7	# encoding: [0x3c,0x0c,0x8a,0xc7]
# CHECK: ori	$8,$8,0x2304	# encoding: [0x35,0x8c,0x23,0x04]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x89e8	# encoding: [0x35,0x8c,0x89,0xe8]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: li	$8,-1		# encoding: [0x24,0x0c,0xff,0xff]
# CHECK: li	$8,-10		# encoding: [0x24,0x0c,0xff,0xf6]
# CHECK: li	$8,-100		# encoding: [0x24,0x0c,0xff,0x9c]
# CHECK: li	$8,-1000	# encoding: [0x24,0x0c,0xfc,0x18]
# CHECK: li	$8,-10000	# encoding: [0x24,0x0c,0xd8,0xf0]
# CHECK: lui	$8,0xfffe	# encoding: [0x3c,0x0c,0xff,0xfe]
# CHECK: ori	$8,$8,0x7960	# encoding: [0x35,0x8c,0x79,0x60]
# CHECK: lui	$8,0xfff0	# encoding: [0x3c,0x0c,0xff,0xf0]
# CHECK: ori	$8,$8,0xbdc0	# encoding: [0x35,0x8c,0xbd,0xc0]
# CHECK: lui	$8,0xff67	# encoding: [0x3c,0x0c,0xff,0x67]
# CHECK: ori	$8,$8,0x6980	# encoding: [0x35,0x8c,0x69,0x80]
# CHECK: lui	$8,0xfa0a	# encoding: [0x3c,0x0c,0xfa,0x0a]
# CHECK: ori	$8,$8,0x1f00	# encoding: [0x35,0x8c,0x1f,0x00]
# CHECK: lui	$8,0xc465	# encoding: [0x3c,0x0c,0xc4,0x65]
# CHECK: ori	$8,$8,0x3600	# encoding: [0x35,0x8c,0x36,0x00]
# CHECK: li	$8,-3		# encoding: [0x24,0x0c,0xff,0xfd]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xabf4	# encoding: [0x35,0x8c,0xab,0xf4]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x1c00	# encoding: [0x35,0x8c,0x1c,0x00]
# CHECK: li	$8,-24		# encoding: [0x24,0x0c,0xff,0xe8]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xb789	# encoding: [0x35,0x8c,0xb7,0x89]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x1800	# encoding: [0x35,0x8c,0x18,0x00]
# CHECK: li	$8,-233		# encoding: [0x24,0x0c,0xff,0x17]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x2b5a	# encoding: [0x35,0x8c,0x2b,0x5a]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xf000	# encoding: [0x35,0x8c,0xf0,0x00]
# CHECK: li	$8,-2329	# encoding: [0x24,0x0c,0xf6,0xe7]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xb18d	# encoding: [0x35,0x8c,0xb1,0x8d]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x6000	# encoding: [0x35,0x8c,0x60,0x00]
# CHECK: li	$8,-23284	# encoding: [0x24,0x0c,0xa5,0x0c]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xef85	# encoding: [0x35,0x8c,0xef,0x85]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xc000	# encoding: [0x35,0x8c,0xc0,0x00]
# CHECK: lui	$8,0xfffc	# encoding: [0x3c,0x0c,0xff,0xfc]
# CHECK: ori	$8,$8,0x7281	# encoding: [0x35,0x8c,0x72,0x81]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x5b39	# encoding: [0x35,0x8c,0x5b,0x39]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x8000	# encoding: [0x35,0x8c,0x80,0x00]
# CHECK: lui	$8,0xffdc	# encoding: [0x3c,0x0c,0xff,0xdc]
# CHECK: ori	$8,$8,0x790d	# encoding: [0x35,0x8c,0x79,0x0d]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x903f	# encoding: [0x35,0x8c,0x90,0x3f]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0xfe9c	# encoding: [0x3c,0x0c,0xfe,0x9c]
# CHECK: ori	$8,$8,0xba87	# encoding: [0x35,0x8c,0xba,0x87]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0xa276	# encoding: [0x35,0x8c,0xa2,0x76]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0xf21f	# encoding: [0x3c,0x0c,0xf2,0x1f]
# CHECK: ori	$8,$8,0x494c	# encoding: [0x35,0x8c,0x49,0x4c]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x589c	# encoding: [0x35,0x8c,0x58,0x9c]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: lui	$8,0x7538	# encoding: [0x3c,0x0c,0x75,0x38]
# CHECK: ori	$8,$8,0xdcfb	# encoding: [0x35,0x8c,0xdc,0xfb]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]
# CHECK: ori	$8,$8,0x7618	# encoding: [0x35,0x8c,0x76,0x18]
# CHECK: dsll	$8,$8,0x10	# encoding: [0x00,0x0c,0x64,0x38]

	dla	$t0, symbol

	dli	$t0, 1
	dli	$t0, 10
	dli	$t0, 100
	dli	$t0, 1000
	dli	$t0, 10000
	dli	$t0, 100000
	dli	$t0, 1000000
	dli	$t0, 10000000
	dli	$t0, 100000000
	dli	$t0, 1000000000
	dli	$t0, 10000000000
	dli	$t0, 100000000000
	dli	$t0, 1000000000000
	dli	$t0, 10000000000000
	dli	$t0, 100000000000000
	dli	$t0, 1000000000000000
	dli	$t0, 10000000000000000
	dli	$t0, 100000000000000000
	dli	$t0, 1000000000000000000
	dli	$t0, 10000000000000000000
	dli	$t0, -1
	dli	$t0, -10
	dli	$t0, -100
	dli	$t0, -1000
	dli	$t0, -10000
	dli	$t0, -100000
	dli	$t0, -1000000
	dli	$t0, -10000000
	dli	$t0, -100000000
	dli	$t0, -1000000000
	dli	$t0, -10000000000
	dli	$t0, -100000000000
	dli	$t0, -1000000000000
	dli	$t0, -10000000000000
	dli	$t0, -100000000000000
	dli	$t0, -1000000000000000
	dli	$t0, -10000000000000000
	dli	$t0, -100000000000000000
	dli	$t0, -1000000000000000000
	dli	$t0, -10000000000000000000
