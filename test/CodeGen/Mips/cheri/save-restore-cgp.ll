; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; Check that we save $cgp when necessary
; RUN: %cheri_purecap_llc -verify-machineinstrs -cheri-cap-table-abi=plt %s -o - -O2 | %cheri_FileCheck %s

@global = local_unnamed_addr addrspace(200) global i8 123, align 8

declare void @external_call1()
declare void @external_call2()
declare i32 @external_i32()

define i8 addrspace(200)* @access_global_after_external_call() {
; CHECK-LABEL: access_global_after_external_call:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:32|64]]
; CHECK-NEXT:    .cfi_def_cfa_offset [[STACKFRAME_SIZE]]
; CHECK-NEXT:    csc $c18, $zero, [[@EXPR 1 * $CAP_SIZE]]($c11)
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    .cfi_offset 90, -[[@EXPR 1 * $CAP_SIZE]]
; CHECK-NEXT:    .cfi_offset 89, -[[@EXPR 2 * $CAP_SIZE]]
; CHECK-NEXT:    cmove $c18, $c26
; CHECK-NEXT:    clcbi $c12, %capcall20(external_call1)($c18)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    cmove $c26, $c18
; CHECK-NEXT:    clcbi $c3, %captab20(global)($c18)
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    clc $c18, $zero, [[@EXPR 1 * $CAP_SIZE]]($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
; We need to save $cgp before the call so it is moved to $c18 (callee-save)
entry:
  call addrspace(200) void @external_call1()
  ret i8 addrspace(200)* @global
}

define void @call_two_functions() {
; CHECK-LABEL: call_two_functions:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:32|64]]
; CHECK-NEXT:    .cfi_def_cfa_offset [[STACKFRAME_SIZE]]
; CHECK-NEXT:    csc $c18, $zero, [[@EXPR 1 * $CAP_SIZE]]($c11)
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    .cfi_offset 90, -[[@EXPR 1 * $CAP_SIZE]]
; CHECK-NEXT:    .cfi_offset 89, -[[@EXPR 2 * $CAP_SIZE]]
; CHECK-NEXT:    cmove $c18, $c26
; CHECK-NEXT:    clcbi $c12, %capcall20(external_call1)($c18)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    cmove $c26, $c18
; CHECK-NEXT:    clcbi $c12, %capcall20(external_call2)($c18)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    cmove $c26, $c18
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    clc $c18, $zero, [[@EXPR 1 * $CAP_SIZE]]($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
entry:
  call addrspace(200) void @external_call1()
  call addrspace(200) void @external_call2()
  ret void
}

define i32 @not_needed_after_call(i32 %arg1, i32 %arg2) {
; CHECK-LABEL: not_needed_after_call:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:32|64]]
; CHECK-NEXT:    .cfi_def_cfa_offset [[STACKFRAME_SIZE]]
; CHECK-NEXT:    csd $17, $zero, {{24|56}}($c11) # 8-byte Folded Spill
; CHECK-NEXT:    csd $16, $zero, {{16|48}}($c11) # 8-byte Folded Spill
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    .cfi_offset 17, -8
; CHECK-NEXT:    .cfi_offset 16, -16
; CHECK-NEXT:    .cfi_offset 89, -[[@EXPR 2 * $CAP_SIZE]]
; CHECK-NEXT:    sll $16, $5, 0
; CHECK-NEXT:    clcbi $c12, %capcall20(external_call1)($c26)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    sll $17, $4, 0
; CHECK-NEXT:    addu $2, $17, $16
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    cld $16, $zero, {{16|48}}($c11) # 8-byte Folded Reload
; CHECK-NEXT:    cld $17, $zero, {{24|56}}($c11) # 8-byte Folded Reload
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
entry:
  call addrspace(200) void @external_call1()
  %ret = add i32 %arg1, %arg2
  ret i32 %ret
}

define void @tailcall(i32 %arg1, i32 %arg2) {
; CHECK-LABEL: tailcall:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:16|32]]
; CHECK-NEXT:    .cfi_def_cfa_offset [[STACKFRAME_SIZE]]
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    .cfi_offset 89, -[[@EXPR 1 * $CAP_SIZE]]
; CHECK-NEXT:    clcbi $c12, %capcall20(external_call1)($c26)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    nop
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
entry:
  tail call addrspace(200) void @external_call1()
  ret void
}
