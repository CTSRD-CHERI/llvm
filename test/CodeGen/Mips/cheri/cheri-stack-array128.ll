; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_purecap_llc %s -o - | %cheri_FileCheck %s

define i32 @foo() nounwind {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:192|224]]
; CHECK-NEXT:    csc $c17, $zero, [[@EXPR STACKFRAME_SIZE - $CAP_SIZE]]($c11)
; CHECK-NEXT:    lui $1, %hi(%neg(%captab_rel(foo)))
; CHECK-NEXT:    daddiu $1, $1, %lo(%neg(%captab_rel(foo)))
; CHECK-NEXT:    cincoffset $c1, $c12, $1
; CHECK-NEXT:    clcbi $c12, %capcall20(bar)($c1)
; CHECK-NEXT:    cincoffset $c1, $c11, [[@EXPR $CAP_SIZE - 8]]
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    csetbounds $c3, $c1, 168
; CHECK-NEXT:    clc $c17, $zero, [[@EXPR STACKFRAME_SIZE - $CAP_SIZE]]($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
entry:
  %buffer = alloca [42 x i32], align 4, addrspace(200)
  %arraydecay = getelementptr inbounds [42 x i32], [42 x i32] addrspace(200)* %buffer, i32 0, i32 0
  %call = call i32 @bar(i32 addrspace(200)* %arraydecay)
  ret i32 %call
}

declare i32 @bar(i32 addrspace(200)*) #1

